{"version":3,"sources":["Pages/PermissionPage.js"],"names":["cookie","Cookie","compose","connect","state","token","auth","tokenV4","accoundId","accountId","accessToken","loginData","setAuth","setToken","setTokenV4Ac","withRouter","useEffect","get","to","className"],"mappings":"sHAAA,yEAOMA,EAAS,IAAIC,IAyCJC,sBACXC,aAToB,SAACC,GACrB,MAAO,CACHC,MAAOD,EAAME,KAAKC,QAClBC,UAAWJ,EAAME,KAAKG,UACtBC,YAAaN,EAAME,KAAKI,YACxBC,UAAWP,EAAME,KAAKK,aAID,CAAEC,YAASC,aAAUC,mBAC9CC,IAFWb,EAxCQ,SAAC,GAAgF,EAA/EG,MAA+E,EAAxEK,YAAwE,EAA3DE,QAA4D,IAAD,EAAlDC,EAAkD,EAAlDA,SAAmCF,GAAe,EAAxCG,aAAwC,EAA1BN,UAA0B,EAAfG,WACrFK,qBAAU,WAIHhB,EAAOiB,IAAI,kBAEVJ,EAASb,EAAOiB,IAAI,oBAEzB,IAIH,OAAIjB,EAAOiB,IAAI,kBAAqBN,EAAmB,cAAC,IAAD,CAAUO,GAAG,MAE5D,kCACI,qBAAKC,UAAU,kBAAf,SAEI,qBAAKA,UAAU,eAAf,SAGI,qBAAKA,UAAU,gBAAf,SACI,sBAAKA,UAAU,MAAf,UACI,oBAAIA,UAAU,qBAAd,4GADJ,UAEMR,GAAa,6EAFnB,QAEsC,cAAC,IAAD,CAAWQ,UAAU","file":"static/js/9.d6a04091.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter, Redirect } from 'react-router';\r\nimport { compose } from 'redux';\r\nimport { setAuth, setToken, setTokenV4Ac } from \"../redux/auth-reducer\";\r\nimport Cookie from 'universal-cookie';\r\nimport Preloader from \"../components/Preloader\";\r\nconst cookie = new Cookie();\r\nconst PermissionPage = ({token, accessToken, setAuth, setToken, setTokenV4Ac, accoundId, loginData}) => {\r\n    useEffect(() => {\r\n        if(!accessToken){\r\n            // setAuth()\r\n        }\r\n        if(cookie.get('request_token')){\r\n            // setTokenV4Ac(cookie.get('request_token'))\r\n            setToken(cookie.get('request_token'))\r\n        }\r\n    }, [])\r\n    const getTokenHandler=()=>{\r\n        setToken(token)\r\n    }\r\n    if(!cookie.get('request_token') || (loginData)) return <Redirect to='/'/>\r\n        return (   \r\n            <section>\r\n                <div className=\"container-fluid\">\r\n                    {/* <button className=\"btn\" onClick={getTokenHandler}>Get Tokens</button> */}\r\n                    <div className=\"modal active\" \r\n                    // style={{backgroundImage: \"url(https://assets.nflxext.com/ffe/siteui/vlv3/03fdc4bf-72f6-4926-83a7-a76e6a1a5591/0bd2016b-9d45-4e2c-bd56-2a25992864c0/BY-ru-20211115-popsignuptwoweeks-perspective_alpha_website_medium.jpg)\"}}\r\n                    >\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"box\">\r\n                                <h3 className=\"title small center\">Идет авторизация...</h3>\r\n                                {(loginData && <p>Готово!</p>) ?? <Preloader className=\"preloader_static\"/> }                        \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        token: state.auth.tokenV4,\r\n        accoundId: state.auth.accountId,\r\n        accessToken: state.auth.accessToken,\r\n        loginData: state.auth.loginData,\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, { setAuth, setToken, setTokenV4Ac }),\r\n    withRouter,\r\n)(PermissionPage)"],"sourceRoot":""}